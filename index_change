import pandas as pd

# Sample DataFrame
data = {'col1': [1, 2, 3, 4, 5], 'col2': ['a', 'b', 'c', 'd', 'e']}
df = pd.DataFrame(data)

# Specify the row swaps
# The index positions where the rows should be moved to
# We can modify these indices based on your specific situation
swap_indices = {122: 119, 130: 127, 301: 298, 309: 306}

# First, get the current DataFrame index order
df_reordered = df.copy()

# Reindex the DataFrame based on the swap logic
# Use `.loc` to reorder based on the target indices
for src, dest in swap_indices.items():
    # Move the row from source index to destination index
    df_reordered.loc[dest] = df.loc[src]

# Reset the index (optional, if you want a clean re-index)
df_reordered = df_reordered.sort_index()

print(df_reordered)

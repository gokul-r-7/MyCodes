{%- set execution_date_arg = var("execution_date", "") %}
{%- set run_date = "CURRENT_DATE" -%}

{{
    config(
        materialized='incremental',
        incremental_strategy='insert_overwrite',
        file_format='iceberg',
        iceberg_expire_snapshots='False', 
        custom_location=target.location ~ 'transformed_doc_control_fact_ecosys_data/',
        table_properties={'write.target-file-size-bytes': '268435456'},
        on_schema_change='append_new_columns',
        full_refresh=true,
		tags=["ecosys"]
        ) 
}}

select
    deliverablehierarchypathid,
    deliverablename,
    costobjecthierarchypathid,
    costobjectname,
    relationshiptypetocaid1,
    progressmethodname,
    gate_sequence,
    codeid,
    codename,
    gate,
    actualquantity,
    quantity,
    alternateunits,
    gate_max,
    complete,
    statusname,
    plannedstart,
    plannedfinish,
    actualstart,
    actualfinish,
    forecaststart,
    forecastfinish,
    target1startdate,
    target1finishdate,
    target2startdate,
    target2finishdate,
    progresslinktoid,
    planningactivitylink,
    documentstatus,
    globaldeliverablelibraryabcidname,
    workingforecasttransactioninternalid,
    execution_date,
    source_system_name,
    doc_no,
    deliverable_id,
    {{run_date}} as created_date,
    {{run_date}} as updated_date,
    {{ generate_load_id(model) }} as load_id
from
    (
        select
            gtdt.deliverablehierarchypathid as deliverablehierarchypathid,
            gtdt.deliverablename as deliverablename,
            gtdt.costobjecthierarchypathid as costobjecthierarchypathid,
            gtdt.costobjectname as costobjectname,
            gtdt.relationshiptypetocaid1 as relationshiptypetocaid1,
            gtdt.progressmethodname as progressmethodname,
            gtdt.sequence as gate_sequence,
            gtdt.codeid as codeid,
            gtdt.codename as codename,
            gtdt.gate as gate,
            gtdt.actualquantity as actualquantity,
            gtdt.quantity as quantity,
            gtdt.alternateunits as alternateunits,
            gtdt.max as gate_max,
            gtdt.complete as complete,
            gtdt.statusname as statusname,
            gtdt.plannedstart as plannedstart,
            gtdt.plannedfinish as plannedfinish,
            gtdt.actualstart as actualstart,
            gtdt.actualfinish as actualfinish,
            gtdt.forecaststart as forecaststart,
            gtdt.forecastfinish as forecastfinish,
            gtdt.target1startdate as target1startdate,
            gtdt.target1finishdate as target1finishdate,
            gtdt.target2startdate as target2startdate,
            gtdt.target2finishdate as target2finishdate,
            gtdt.progresslinktoid as progresslinktoid,
            gtdt.planningactivitylink as planningactivitylink,
            gtdt.documentstatus as documentstatus,
            gtdt.globaldeliverablelibraryabcidname as globaldeliverablelibraryabcidname,
            gtdt.workingforecasttransactioninternalid as workingforecasttransactioninternalid,
            gtdt.execution_date as execution_date,
            gtdt.source_system_name as source_system_name,
            dcs.doc_no as doc_no, 
            dcs.deliverable_id as deliverable_id
        from
	    (select
		    deliverablehierarchypathid,
            deliverablename,
            costobjecthierarchypathid,
            costobjectname,
            relationshiptypetocaid1,
            progressmethodname,
            sequence,
            codeid,
            codename,
            gate,
            actualquantity,
            quantity,
            alternateunits,
            max,
            complete,
            statusname,
            plannedstart,
            plannedfinish,
            actualstart,
            actualfinish,
            forecaststart,
            forecastfinish,
            target1startdate,
            target1finishdate,
            target2startdate,
            target2finishdate,
            progresslinktoid,
            planningactivitylink,
            documentstatus,
            globaldeliverablelibraryabcidname,
            workingforecasttransactioninternalid,
            execution_date,
            source_system_name,
			row_number() over (partition by deliverablehierarchypathid,sequence,codeid order by  plannedfinish) as row_id
			from {{ source('curated_ecosys', 'curated_gate_data') }} ) gtdt
            inner join {{ source('curated_ecosys', 'curated_dcs_mapping') }} dcs
	    ON REVERSE(SUBSTRING(REVERSE(gtdt.deliverablehierarchypathid),1,POSITION('.' IN REVERSE(gtdt.deliverablehierarchypathid) )-1 ))=dcs.deliverable_id
            and gtdt.row_id=1
    ) z
order by
    codeid,
    gate_sequence


# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_circuit_breaker'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_circuit_breaker'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

vars:
  curated_schema:
    dev: "worley_datalake_sydney_dev_glue_catalog_database_circuit_breaker_hexagon_curated"
    qa: "worley_datalake_sydney_dev_glue_catalog_database_circuit_breaker_hexagon_curated"
    prd: "worley_datalake_sydney_dev_glue_catalog_database_circuit_breaker_hexagon_curated"
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  circuit_domain_model:
    audit_table:
      +materialized: incremental
      +depends_on:
        - ref('audit_table')
    gsr:
      +tags: ["circuit_breaker"]


on-run-end:
# add run results to audit table 
  - "{{ log_audit_table(results) }}" 


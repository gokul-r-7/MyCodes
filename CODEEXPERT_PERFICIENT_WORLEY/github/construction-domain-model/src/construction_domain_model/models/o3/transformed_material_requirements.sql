{%- set execution_date_arg = var("execution_date", "") %}
{%- set run_date = dbt.date_trunc("second", dbt.current_timestamp()) %}
{{
    config(
        materialized='incremental',
        incremental_strategy='insert_overwrite',
        file_format='iceberg',
        iceberg_expire_snapshots='False', 
        custom_location=target.location ~ 'transformed_material_requirements/',
        table_properties={'write.target-file-size-bytes': '268435456'},
        on_schema_change='append_new_columns',
        full_refresh=true,
        tags=["o3"]
    ) 
}}
   
select
    CAST({{ dbt_utils.generate_surrogate_key(['projectid', 'entityid', 'materialcatalogid', 'drawingid']) }} AS INT)  as material_requirements_key,
    CAST(id AS INT) as id,
    CAST(entityid AS INT) as entityid,
    CAST(projectid AS INT) as projectid,
    CAST(entitytypeid AS INT) as entitytypeid,
    CAST(materialcatalogid AS INT) as materialcatalogid,
    catalogcode,
    CAST(materialcategoryid AS INT) as materialcategoryid,
    materialcategory,
    description,
    materialtype,
    materialrequirementsuom,
    size1,
    size2,
    CAST(quantity AS DECIMAL(10,3)) as quantity,
    CAST(datecreated AS TIMESTAMP) as datecreated,
    CAST(createdbyuserid AS INT) as createdbyuserid,
    createdbyuser,
    CAST(datemodified AS TIMESTAMP) as datemodified,
    CAST(modifiedbyuserid AS INT) as modifiedbyuserid,
    modifiedbyuser,
    providedby,
    CAST(fabricatedid AS INT) as fabricatedid,
    fabricated,
    CAST(sdsapprovedid AS INT) as sdsapprovedid,
    sdsapproved,
    CAST(marapprovedid AS INT) as marapprovedid,
    marapproved,
    CAST(purchasedid AS INT) as purchasedid,
    purchased,
    CAST(inwarehouseid AS INT) as inwarehouseid,
    inwarehouse,
    CAST(mirraisedid AS INT) as mirraisedid,
    mirraised,
    CAST(atsiteid AS INT) as atsiteid,
    atsite,
    CAST(responsibilityid AS INT) as responsibilityid,
    responsibility,
    CAST(issuedquantity AS DECIMAL(10,3)) as issuedquantity,
    entitystatusstate,
    CAST(entityplannedstartdate AS TIMESTAMP) as entityplannedstartdate,
    sheet,
    CAST(statusid AS INT) as statusid,
    CAST(materialstatusid AS INT) as materialstatusid,
    materialstatus,
    CAST(materialavailabilityid AS INT) as materialavailabilityid,
    materialavailability,
    materialavailabilitycolor,
    CAST(clonedfromentityid AS INT) as clonedfromentityid,
    CAST(drawingid AS INT) as drawingid,
    drawing,
    drawingfilename,
    componentidentifier,
    needsverification,
    notes,
    CAST(sourceid AS INT) as sourceid,
    source,
    CAST(sourceimportid AS INT) as sourceimportid,
    autocreatedfromconstructioncomponentid,
    CAST(trackingtag AS STRING) as trackingtag,
    CAST(length AS DECIMAL(10,3)) as length,
    lengthuom,
    CAST(width AS DECIMAL(10,3)) as width,
    widthuom,
    CAST(height AS DECIMAL(10,3)) as height,
    heightuom,
    CAST(materialarea AS DECIMAL(10,3)) as materialarea,
    CAST(volume AS DECIMAL(10,3)) as volume,
    CAST(weight AS DECIMAL(10,3)) as weight,
    inchdia,
    materialareauom,
    volumeuom,
    weightuom,
    inchmeter,
    CAST(autocreatedfrompipespoolid AS INT) as autocreatedfrompipespoolid,
    CAST(autocreatedfrompipecomponentid AS INT) as autocreatedfrompipecomponentid,
    CAST(constructioncomponentid AS INT) as constructioncomponentid,
    CAST(clonedfromid AS INT) as clonedfromid,
    CAST(clonedfromscopeid AS INT) as clonedfromscopeid,
    sourcekey,
    includeinpackageestimationscope,
    CAST(forecastreceiptdate AS TIMESTAMP) as forecastreceiptdate,
    CAST(actualreceiptdate AS TIMESTAMP) as actualreceiptdate,
    CAST(sendoffshoredate AS TIMESTAMP) as sendoffshoredate,
    CAST(receiveoffshoredate AS TIMESTAMP) as receiveoffshoredate,
    CAST(orderdate AS TIMESTAMP) as orderdate,
    orderingresponsibleparty,
    shortquantity,
    sequence,
    vendordrawing,
    weightrange,
    componentlookupkey,
    isaddedtoiwp,
    datemodified_ts,
    source_system_name,
    primary_key,
    is_current,
    eff_start_date,
    eff_end_date,
    cast(execution_date as DATE) as execution_date,
    CAST({{run_date}} as DATE) as model_created_date,
    CAST({{run_date}} as DATE) as model_updated_date,
    {{ generate_load_id(model) }} as model_load_id
from {{ source('curated_o3', 'curated_material_requirements') }}
where is_current = 1
{%- if execution_date_arg != "" %}
    and execution_date >= '{{ execution_date_arg }}'
{%- else %}
    {%- if is_incremental() %}
        and cast(execution_date as DATE) > (select max(execution_date) from {{ this }})
    {%- endif %}
{%- endif %}  